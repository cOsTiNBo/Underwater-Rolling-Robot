<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Motor Control</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #121212;
            color: #ffffff;
            text-align: center;
        }
        .container {
            width: 80%;
            max-width: 600px;
            margin: auto;
            padding: 20px;
        }
        .section {
            margin-bottom: 20px;
            padding: 20px;
            border-radius: 10px;
            background-color: #484a49;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        h2, h3 {
            color: #02c05e;
        }
        .slider {
            width: 100%;
        }
        table {
            width: 100%;
            margin-top: 10px;
            border-collapse: collapse;
            background-color: #2a2a2a;
        }
        th, td {
            padding: 10px;
            text-align: center;
            border: 1px solid #444;
        }
        button {
            background-color: #02c05e;
            color: #212121;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            margin: 10px;
        }
        button:hover {
            background-color: #04802d;
        }
		.emergency-btn {
            background-color: #ff3b3b;
            color: white;
        }
        .emergency-btn:hover {
            background-color: #cc0000;
        }
		
        input[type="number"] {
            padding: 10px;
            width: 120px;
            font-size: 16px;
            text-align: center;
            border-radius: 5px;
            border: 1px solid #555;
            background-color: #222;
            color: #fff;
        }
    </style>
	
</head>
<body>
    <div class="container">
        <h2>Motor Control</h2>
		
		<div class="section">
            <h3>Mode</h3>
            <button onclick="enableVelocityMode()">Enable Velocity Mode</button>
			<button class="emergency-btn" onclick="rebootMotors()">Reboot Motors</button>
        </div>

        <div class="section">
            <h3>Set Speed</h3>
            <input type="number" id="speed" min="-200" max="200" value="0">
            <p>Motor 1 Speed: <span id="speedValue1">0</span></p>
            <p>Motor 2 Speed: <span id="speedValue2">0</span></p>
        </div>

        <div class="section">
            <button onclick="sendCommand()">Start Motors</button>
            <button onclick="stopMotors()" style="background-color: #ff3b3b; color: white;">Stop</button>
        </div>
		
        <div class="section">
            <h3>IMU Telemetry</h3>
            <table>
                <tr><th>Axis</th><th>X</th><th>Y</th><th>Z</th><th>W</th></tr>
                <tr><td>Orientation</td><td id="imuOrientationX">-</td><td id="imuOrientationY">-</td><td id="imuOrientationZ">-</td><td id="imuOrientationW">-</td></tr>
                <tr><td>Angular Velocity</td><td id="imuAngularVelocityX">-</td><td id="imuAngularVelocityY">-</td><td id="imuAngularVelocityZ">-</td><td>-</td></tr>
                <tr><td>Linear Acceleration</td><td id="imuLinearAccelerationX">-</td><td id="imuLinearAccelerationY">-</td><td id="imuLinearAccelerationZ">-</td><td>-</td></tr>
            </table>
        </div>
    </div>

    <script>
	    function enableVelocityMode() {
			let data = new FormData();
            data.append("mode", 1); // Velocity mode

            fetch("/control", {
                method: "POST",
                body: data
            });
        }
		        
		function rebootMotors() {
            let data = new FormData();
            data.append("reboot_motors", "1");

            fetch("/control", {
                method: "POST",
                body: data
            }).then(response => alert("Motors Rebooted"))
              .catch(error => alert("Error rebooting motors"));
        }
        function sendCommand() {
            let speed = document.getElementById("speed").value;
            let speed1 = parseInt(speed);
            let speed2 = -speed1; // Opposite direction

            document.getElementById("speedValue1").innerText = speed1;
            document.getElementById("speedValue2").innerText = speed2;

            let data = new FormData();
            data.append("velocity1", speed1);
            data.append("velocity2", speed2);

            fetch("/control", {
                method: "POST",
                body: data
            });
        }

        function stopMotors() {
            let data = new FormData();
            data.append("velocity1", 0);
            data.append("velocity2", 0);

            fetch("/control", {
                method: "POST",
                body: data
            });
        }
		setInterval(function () {
			fetch('/imu')
				.then(response => response.json())
				.then(data => {
					let imu = data.imu;
					document.getElementById('orientation_x').innerText = imu.orientation[0];
					document.getElementById('orientation_y').innerText = imu.orientation[1];
					document.getElementById('orientation_z').innerText = imu.orientation[2];
					document.getElementById('orientation_w').innerText = imu.orientation[3];

					document.getElementById('angular_x').innerText = imu.angular_velocity[0];
					document.getElementById('angular_y').innerText = imu.angular_velocity[1];
					document.getElementById('angular_z').innerText = imu.angular_velocity[2];

					document.getElementById('accel_x').innerText = imu.linear_acceleration[0];
					document.getElementById('accel_y').innerText = imu.linear_acceleration[1];
					document.getElementById('accel_z').innerText = imu.linear_acceleration[2];
				})
				.catch(error => console.error('Error fetching imu:', error));
		}, 1000);
    </script>
</body>
</html>
